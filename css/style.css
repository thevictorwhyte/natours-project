/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

*,
*::after,
*::before {
    margin: 0px;
    padding: 0px;
    box-sizing: inherit;
}

html {
    font-size: 62.5%;
}

body {
    font-family: "Lato", sans-serif;
    font-weight: 400;
    /* font-size: 16px; */
    line-height: 1.7;
    color: #777;
    padding: 3rem;

    box-sizing: border-box;
}

.header {
    height: 95vh;
    background-image: linear-gradient(to right bottom,
        rgba(126, 213, 111, 0.8), 
        rgba(39, 180, 133, 0.8)), 
        url(../img/hero.jpg);
    background-size: cover; 
    background-position: top;
    position: relative;

    clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
}

.header__logo-box{
    position: absolute;
    top: 4rem;
    left: 4rem;
}

.header__logo{
    height: 3.5rem;
}

.header__text-box {
    position: absolute;
    top: 40%;
    left: 50%;
    transform: translate(-50%, -50%);
    text-align: center;
}

.heading-primary {
    color: #fff;
    text-transform: uppercase;
    backface-visibility: hidden;
    margin-bottom: 6rem;
}

.heading-primary--main {
    display: block;
    font-size: 6rem;
    font-weight: 400;
    letter-spacing: 3.5rem;

    animation-name: moveInLeft;
    animation-duration: 1s;
    animation-timing-function: ease-out;


    /*  animation-delay: 3s ; 
        animation-iteration-count: 3;

    */
}

.heading-primary--sub{
    display: block;
    font-size: 2rem;
    font-weight: 700;
    letter-spacing: 1.75rem;
    animation: moveInRight 1s ease-out;
}

@keyframes moveInLeft {
    0% {
        opacity: 0;
        transform: translateX(-10rem);
    }

    80% {
        transform: translateX(1rem);
    }

    100% {
        opacity: 1;
        transform: translate(0);
    }
}

@keyframes moveInRight {
    0% {
        opacity: 0;
        transform: translateX(10rem);
    }

    80% {
        transform: translateX(-1rem);
    }

    100% {
        opacity: 1;
        transform: translate(0);
    }
}

@keyframes moveInBottom {
    0% {
        opacity: 0;
        transform: translateY(3rem);
    }

    100% {
        opacity: 1;
        transform: translate(0);
    }
}

.btn:link,
.btn:visited{ /* Note we use pseudo classes to style elements under a special condition */
    text-transform: uppercase;
    text-decoration: none;
    padding: 1.5rem 4rem;
    display: inline-block;
    border-radius: 10rem;
    transition: all .2s;
    position: relative; /* Needed for the pseudo element specified. */
    font-size: 1.6rem;
}

.btn:hover {
    transform: translateY(-3px);
    box-shadow: 0 1rem 2rem rgba(0,0,0,.2); /* the values are, offset in the x axis  offest in the y axis  blur  colour */
}

.btn:active { /* When we click an element then it is called the active state */
    transform: translateY(-1px);
    box-shadow: 0 .5rem 1rem rgba(0,0,0,.2);
}
.btn--white{
    background-color: #fff;
    color: #777;
}

.btn::after { /* it creates a duplicate of the main element. CONTENT PROPERTY IS MANDATORY even if it is empty */
    content: "";
    display: inline-block; /*Becuase the btn is also an inline block. We want it to be exactly the same */
    height: 100%;
    width: 100%;
    border-radius: 10rem;
    position: absolute; /* We need it behing the main element */
    top: 0;
    left: 0;
    z-index: -1; /* Defines the position of elements if they are one on top of eachother */
    transition: all .4s; /*REMEMBER we put the transition property on the initial state.

/*The after is a pseudo element that is basically treated as a child of the main element (btn). */    
}

.btn--white::after {
    background-color: #fff;
}

.btn:hover::after {
    transform: scaleX(1.4) scaleY(1.6);
    opacity: 0;
}

.btn--animated {
    animation: moveInBottom .5s ease-out .7s; /* Last parameter is the animation delay */
    animation-fill-mode: backwards; /* The applies the animation before it start */ 

}